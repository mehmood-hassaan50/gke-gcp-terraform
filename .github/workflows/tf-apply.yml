name: tf-apply

on:
  workflow_dispatch:
    inputs:
      plan_commit_sha:
        description: "Commit SHA whose plan to apply (defaults to current commit)"
        required: false
        default: ""

permissions:
  contents: read

env:
  PLAN_BUCKET: plan-bucket-zaf-gcp

jobs:
  apply:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Authenticate to GCP
        uses: google-github-actions/auth@v2
        with:
          credentials_json: ${{ secrets.GCP_CREDENTIALS }}

      - name: Setup gcloud
        uses: google-github-actions/setup-gcloud@v2
        with:
          project_id: ${{ secrets.GCP_PROJECT_ID }}

      - name: Setup Terraform 1.13.1
        run: |
          sudo apt-get update && sudo apt-get install -y unzip
          curl -LO "https://releases.hashicorp.com/terraform/1.13.1/terraform_1.13.1_linux_amd64.zip"
          unzip terraform_1.13.1_linux_amd64.zip
          sudo mv terraform /usr/local/bin/
          terraform -version

      - name: Determine Commit SHA
        id: commit
        run: |
          if [ -n "${{ github.event.inputs.plan_commit_sha }}" ]; then
            echo "sha=${{ github.event.inputs.plan_commit_sha }}" >> $GITHUB_OUTPUT
          else
            echo "sha=${{ github.sha }}" >> $GITHUB_OUTPUT
          fi

      - name: Download plan & checksum from GCS
        run: |
          PLAN_PREFIX="${{ github.repository }}#${{ steps.commit.outputs.sha }}"
          gsutil cp gs://${PLAN_BUCKET}/${PLAN_PREFIX}/plan.tfplan ./plan.tfplan
          gsutil cp gs://${PLAN_BUCKET}/${PLAN_PREFIX}/plan.tfplan.sha256 ./plan.tfplan.sha256

      - name: Verify checksum
        run: |
          DOWN_HASH="$(sha256sum plan.tfplan | awk '{print $1}')"
          EXP_HASH="$(cat plan.tfplan.sha256)"
          if [ "$DOWN_HASH" != "$EXP_HASH" ]; then
            echo "Checksum mismatch! expected=$EXP_HASH got=$DOWN_HASH"
            exit 1
          fi

      - name: Terraform Init
        run: terraform init -input=false

      - name: Terraform Apply (from binary plan)
        run: terraform apply -input=false -var="project_id=${{ secrets.GCP_PROJECT_ID }}" plan.tfplan

